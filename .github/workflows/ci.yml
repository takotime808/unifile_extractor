name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]

# Cancel older runs on the same branch/PR to save CI minutes
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Unit tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Upgrade pip
        run: python -m pip install -U pip

      # If you maintain a requirements-dev.txt, install that here instead of extras.
      - name: Install package with test/dev extras
        run: pip install -e ".[test,dev]"

      - name: Install pytest and coverage tools
        run: pip install pytest pytest-xdist pytest-cov pytest-sugar coverage-badge

      # Run tests (quiet by default; add -vv for debugging)
      - name: Run pytest
        run: |
          pytest -q \
            --maxfail=1 \
            --disable-warnings \
            --cov=unifile \
            --cov-report=xml:coverage.xml \
            --cov-report=term

      - name: Generate coverage badge
        run: coverage-badge -o coverage.svg -f

      - name: Upload coverage (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: |
            coverage.xml
            coverage.svg

      - name: Commit coverage badge
        if: github.ref == 'refs/heads/main' && matrix.python-version == '3.12'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add coverage.svg
          git commit -m "chore: update coverage badge" || echo "No changes to commit"
          git push

  docs:
    name: Build Sphinx docs
    runs-on: ubuntu-latest
    needs: tests  # wait for tests to pass first

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Upgrade pip
        run: python -m pip install -U pip

      - name: Install project (no heavy dev extras needed)
        run: pip install -e .

      # Install Sphinx and a theme; swap furo for your preferred theme
      - name: Install Sphinx toolchain
        run: |
          pip install \
            sphinx \
            furo \
            sphinx-autodoc-typehints \
            myst-parser

      # Build HTML docs
      - name: Build Sphinx HTML
        run: sphinx-build -b html docs/sources docs/sources/_build/html

      # (Optional) Linkcheck job can be slow; enable if desired
      # - name: Link check
      #   run: sphinx-build -b linkcheck docs docs/sources/_build/linkcheck

      - name: Upload HTML docs (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-html
          path: docs/sources/_build/html
