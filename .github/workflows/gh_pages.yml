name: Deploy Documentation & Coverage Badge

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write  # needed to push gh-pages

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-docs-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install system packages (tesseract, ffmpeg)
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc
          sudo apt-get install -y --no-install-recommends \
            tesseract-ocr \
            ffmpeg
          sudo apt-get clean

      - name: Upgrade pip
        run: python -m pip install -U pip

      - name: Install project (docs + test extras)
        run: pip install -e ".[test,dev]"

      - name: Install genbadge
        run: pip install "genbadge[coverage]" httpx

      # ---- Run tests and produce coverage.xml ----
      - name: Run pytest with coverage
        env:
          UNIFILE_DISABLE_PDF_OCR: ""
          UNIFILE_OCR_LANG: eng
        run: |
          pytest -q \
            --maxfail=1 \
            --disable-warnings \
            --cov=unifile \
            --cov-report=xml:coverage.xml

      # ---- Prepare docs output and badge ----
      - name: Prepare docs build directory
        run: mkdir -p docs/sources/_build/html/_assets

      - name: Generate coverage.svg badge
        run: genbadge coverage -i coverage.xml -o docs/sources/_build/html/_assets/coverage.svg

      # ---- Build Sphinx docs ----
      - name: Build Sphinx HTML
        # run: sphinx-build -b html docs docs/sources/_build/html
        run: cd docs/sources && make html 

      - name: Upload docs artifact (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: docs/sources/_build/html

      # ---- Deploy to GitHub Pages ----
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/sources/_build/html
