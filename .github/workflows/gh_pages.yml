name: Docs & Coverage to Pages

on:
  push:
    branches: [main, master]

permissions:
  contents: read        # checkout
  pages: write          # deploy to Pages
  id-token: write       # OIDC for deploy-pages

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest pytest-cov coverage[toml]

      # Best-effort test run just to produce coverage.xml, so we can publish a badge even if docs fail
      # # IMPORTANT: keep flags identical to your normal CI so numbers match
      - name: Run tests with coverage
        run: |
          pytest --disable-warnings --maxfail=0 \
            --cov=src --cov-report=term --cov-report=xml:coverage.xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: |
            coverage.xml
            .coverage*
          if-no-files-found: error

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install system deps (pandoc for nbsphinx)
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Install docs deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install "docutils==0.20.1" \
            sphinx furo sphinx-autodoc-typehints myst-parser nbsphinx \
            sphinxcontrib-mermaid sphinx-autoapi sphinx-copybutton \
            "genbadge[coverage]"

      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-xml
          path: cover_art

      - name: Generate coverage.svg from the test artifact
        run: |
          cp cover_art/coverage.xml coverage.xml
          genbadge coverage -i coverage.xml -o coverage.svg

      - name: Build Sphinx (non-fatal)
        run: sphinx-build -b html docs/sources docs/sources/_build/html || true

      - name: Prepare site (copy badge, ensure index)
        run: |
          mkdir -p docs/sources/_build/html/_assets
          cp coverage.svg docs/sources/_build/html/_assets/coverage.svg
          if [ ! -f docs/sources/_build/html/index.html ]; then
            printf '%s\n' '<!doctype html><meta charset="utf-8"><title>unifile_extractor docs</title><h1>Documentation</h1><p><img src="_assets/coverage.svg" alt="coverage badge"></p>' \
              > docs/sources/_build/html/index.html
          fi

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/sources/_build/html

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
