src.unifile.extractors.pptx_extractor
=====================================

.. py:module:: src.unifile.extractors.pptx_extractor


Classes
-------

.. autoapisummary::

   src.unifile.extractors.pptx_extractor.PptxExtractor


Module Contents
---------------

.. py:class:: PptxExtractor

   Bases: :py:obj:`unifile.extractors.base.BaseExtractor`


   PPTX --> plain-text extractor.

   For each slide, this extractor gathers text from shapes that expose a
   `.text` attribute and emits one standardized row per slide.

   Inherits :meth:`BaseExtractor.extract` for path validation and
   exception-to-error-row wrapping. The slide parsing logic is implemented
   in :meth:`_extract`.

   Output Rows
   -----------
   * Per slide (index `i`):
       - file_type: "pptx"
       - unit_type: "slide"
       - unit_id:   str(i)
       - content:   Combined newline-joined text from slide shapes
       - metadata:  {"slide_index": i}

   .. admonition:: Notes

      - Shapes without textual content are skipped.
      - Errors on individual shapes are ignored, so one bad shape does not
        prevent the rest of the slide from being processed.


   .. py:attribute:: supported_extensions
      :value: ['pptx']



   .. py:method:: _extract(path: pathlib.Path) -> List[unifile.extractors.base.Row]

      Parse a PPTX file into standardized per-slide rows.

      :param path: Path to a `.pptx` file. Existence checks are handled by
                   :class:`BaseExtractor.extract`.

      :returns: One row per slide with collected text content.
      :rtype: list[Row]



