[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "unifile"
version = "0.1.0"
description = "Unified text extraction: ingest PDFs/DOCX/PPTX/Images/Spreadsheets/HTML and emit a standardized table."
authors = [{name="takotime808"}]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "pandas>=2.0",
    "PyMuPDF>=1.24",
    "python-docx>=1.1.0",
    "python-pptx>=0.6.23",
    "openpyxl>=3.1.2",
    "Pillow>=10.0",
    "pytesseract>=0.3.10",
    "beautifulsoup4>=4.12",
    "lxml>=5.0.0",
    "chardet>=5.2.0",
    "ebooklib", # for epub_extractor.py
]

[project.optional-dependencies]
archive = ["py7zr>=0.21.0"]   # if 7z is added later
lang = ["langid>=1.1.6"]      # or fasttext, cld3, ...
media = [
    # Use ONE Whisper package that provides `import whisper`:
    "openai-whisper>=20231117",
    # Prefer faster-whisper when available; it still imports as a different API...
    "faster-whisper>=1.0.0; platform_system != 'Windows'",
    # We shell out to ffmpeg; python bindings are optional but handy:
    "ffmpeg-python>=0.2.0",
]
dev = [
    "pyarrow>=16.0.0",
    "fastparquet>=2024.2.0"
]
test = [
    "requests>=2.32.0",
    "pytest",
    "pytest-cov",
    "pytest-sugar",
    "pytest-xdist",
]
docs = [
    "docutils==0.20.1",
    "sphinx",
    "furo",
    "sphinx-autodoc-typehints",
    "myst-parser",
    "nbsphinx",
    "sphinxcontrib-mermaid",
    "sphinx-autoapi",
    "sphinx-copybutton",
    "genbadge[coverage]",
]

[project.scripts]
unifile = "cli_unifile.cli:main"
unifile-extract = "cli_unifile.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 100
target-version = "py311"
lint.select = ["E","F","I","UP","B","N","A","C4"]  # core + pyupgrade + bugbear etc.

[tool.mypy]
python_version = "3.11"
warn_unused_ignores = true
disallow_untyped_defs = true
ignore_missing_imports = true